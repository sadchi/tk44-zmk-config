/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

#define DEF 0
#define NUM 1
#define NAV 2

&lt { quick-tap-ms = <200>; };
&mt { quick-tap-ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {

                        bindings = <
&kp LWIN &kp ESC   &kp Q          &kp W    &kp E         &kp R         &kp T      &kp Y     &kp U    &kp I     &kp O    &kp P       &kp BSPC &kp RWIN
         &kp TAB   &kp A          &kp S    &kp D         &kp F         &kp G      &kp H     &kp J    &kp K     &kp L    &kp SEMI    &kp DEL  
         &kp LCTRL &kp Z          &kp X    &kp C         &kp V         &kp B      &kp N     &kp M    &kp COMMA &kp DOT  &kp SLASH   &kp RET  
         &mo NUM   &kp SPACE      &mo NAV    &none          &kp LSFT      &none   
                        >;
                };
                lower_layer {

                        bindings = <
&kp LWIN &kp ESC   &kp KP_DIVIDE  &kp N7   &kp N8        &kp N9        &kp MINUS  &kp EXCL  &kp AT   &kp HASH  &kp DLLR &kp PRCNT   &kp BSPC &kp RWIN
         &kp TAB   &kp KP_ASTERIX &kp N4   &kp N5        &kp N6        &kp EQUAL  &kp CARET &kp AMPS &kp STAR  &kp LPAR &kp RPA     &kp DEL  
         &kp LCTRL &kp N0         &kp N1   &kp N2        &kp N3        &kp KP_DOT &kp GRAVE &kp SQT  &kp LBKT  &kp RBKT &kp BSLH    &kp RET  
         &trans    &trans         &trans   &kp RC(MINUS) &kp RC(EQUAL) &trans  
                        >;
                };

                raise_layer {

                        bindings = <
   &trans &kp KP_NUM      &kp KP_SLASH    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS        &kp C_VOL_UP &kp HOME &kp PSCRN &kp PG_UP &kp SLCK &kp CAPS &trans
          &mt LCTRL EQUAL &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS         &kp C_MUTE   &kp LEFT &kp UP    &kp RIGHT &kp INS  &mt RCTRL K_APP
          &trans          &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT          &kp C_VOL_DN &kp END  &kp DOWN  &kp PG_DN &kp PAUSE_BREAK &trans
                                                           &trans &trans &lt ADJ RET   &lt ADJ ESC &trans &trans
                        >;
                };
                adjust_layer {

                        bindings = <
   &sys_reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &sys_reset
              &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
              &out OUT_TOG &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &out OUT_TOG
                                                                          &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
